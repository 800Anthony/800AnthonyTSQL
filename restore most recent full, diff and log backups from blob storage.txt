/*-------POSH-------------

#Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force
#Install-Module AzureRM
Import-Module -Name Az
#Import-Module -Name Az.Storage

[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
Enable-AzureRmAlias 
$StorageAccountName = "dbbtgsqlbackups"
$ContainerName = "sql-backups-availabilitygroup"
$StorageAccountKey = "4MKUpKC2zuiA0SyIGI8p/AKLUkufwFtEcmdjKFnHoNqPOttmcuJIFSrWe7w1lg1DK8AGvysmwfzzDI9VHMgJgQ=="
$Context = New-AzStorageContext -StorageAccountName $StorageAccountName -StorageAccountKey $StorageAccountKey
#$sqlInstance = "10.1.15.6\plrestore,1433"
$sqlInstance = "restore-db-test\SBRestore"


#Get-AzureStorageContainer -Context $Context | Select Name

$BackupList = Get-AzureStorageBlob -Container $ContainerName -Context  $Context | Select Name, lastModified

$truncateQuery = 'TRUNCATE TABLE dbatoolbox.dbo.RecentBackups'

Invoke-Sqlcmd -Query $truncateQuery -ServerInstance $sqlInstance

foreach($backup in $BackupList){

$QUERY = "INSERT INTO dbatoolbox.dbo.RecentBackups(backupPath, backupDate)
VALUES('" + $backup.name +  "','" + $backup.lastModified.DateTime + "')
"



Invoke-Sqlcmd -Query $Query -ServerInstance $sqlInstance

}


#Get-AzStorageBlob -Container 'sql-backups-userdb' -Context  $Context | Select Name

#Get-AzureStorageFile -ShareName "ContosoShare06" -Path "ContosoWorkingFolder" | Get-AzureStorageFile

*/------------------------

USE [DBAToolbox]
GO
/****** Object:  StoredProcedure [dbo].[RestoreDB]    Script Date: 5/28/2021 1:38:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER   PROCEDURE [dbo].[RestoreDB]
     @agName varchar(30),
	 @dbToRestore varchar(30),
	 @fullOnly BIT = 0,
	 @printOnly BIT = 1
AS
BEGIN

	/*DECLARE @agName varchar(30) = 'WAN_AG1'
	DECLARE @dbToRestore varchar(30) = 'Resources'
	DECLARE @fullOnly BIT = 0*/

	Exec xp_cmdshell 'powershell.exe "C:\SQLPSScripts\FillDBRecentBackups.ps1"'	

	DECLARE @logStartPoint DATETIME

	DROP TABLE IF EXISTS #fullBackupFiles
	DROP TABLE IF EXISTS #diffBackupFiles
	DROP TABLE IF EXISTS #logBackupFiles

	CREATE TABLE #fullBackupFiles
	(
		backupPath VARCHAR(2000),
		backupDate DATETIME
	)

	CREATE TABLE #diffBackupFiles
	(
		backupPath VARCHAR(2000),
		backupDate DATETIME
	)

	CREATE TABLE #logBackupFiles
	(
		backupPath VARCHAR(2000),
		backupDate DATETIME
	)

	-- Full backup files
	INSERT INTO #fullBackupFiles
	SELECT backupPath, backupDate 
	FROM RecentBackups WHERE backupDate =(
	Select MAX(backupDate) 
	from dbo.RecentBackups WITH(NOLOCK)
	WHERE backupPath like '%'+@agName+'%'
	AND backupPath like '%'+@dbToRestore+'%'
	AND backupPath like '%.bak%'
	)


	-- Diff backup files
	INSERT INTO #diffBackupFiles
	SELECT backupPath, backupDate FROM RecentBackups WHERE backupDate =(
	Select MAX(backupDate) 
	from dbo.RecentBackups WITH(NOLOCK)
	WHERE backupPath like '%'+@agName+'%'
	AND backupPath like '%'+@dbToRestore+'%'
	AND backupPath like '%.dif%'
	)

	--@logStartPoint =
	SELECT @logStartPoint = MAX(b.backupDate)
	FROM
	(SELECT  backupDate
	FROM #fullBackupFiles
	UNION ALL
	SELECT backupDate
	FROM #diffBackupFiles) b

	-- Log backup files
	INSERT INTO #logBackupFiles
	SELECT backupPath, backupDate 
	FROM RecentBackups WHERE 
	 backupPath like '%'+@agName+'%'
	AND backupPath like '%'+@dbToRestore+'%'
	AND backupPath like '%.trn%'
	AND @logStartPoint < backupDate 



	DECLARE @sqlText VARCHAR(MAX) = ''
	DECLARE @sqlTextINC VARCHAR(MAX) = ''

	SELECT @sqlTextINC = @sqlTextINC + 'URL = N''' + 'https://dbbtgsqlbackups.blob.core.windows.net/sql-backups-availabilitygroup/' + backupPath + ''','
	FROM #fullBackupFiles

	SELECT @sqlTextINC = LEFT(@sqlTextINC, LEN(@sqlTextINC) - 1) 

	SELECT @sqlText = 'RESTORE DATABASE [' + @dbToRestore + '] FROM ' + @sqlTextINC --+ ' WITH NORECOVERY'

	IF @fullOnly = 0
	BEGIN
	SELECT @sqlText = @sqlText + ' WITH NORECOVERY, Replace'
	END
	ELSE 
	BEGIN
	SELECT @sqlText = @sqlText + ' WITH RECOVERY, Replace'
	END

	IF (@printOnly = 1)
	BEGIN
		SELECT (@sqlText)
	END
	ELSE
	BEGIN
		EXEC (@sqlText)
	END

	

	IF @fullOnly = 0
	BEGIN

		IF EXISTS (SELECT TOP 1 * FROM #diffBackupFiles)
		BEGIN
			SET @sqlText  = ''
			SET @sqlTextINC  = ''

			SELECT @sqlTextINC = @sqlTextINC + 'URL = N''' + 'https://dbbtgsqlbackups.blob.core.windows.net/sql-backups-availabilitygroup/' + backupPath + ''','
			FROM #diffBackupFiles

			SELECT @sqlTextINC = LEFT(@sqlTextINC, LEN(@sqlTextINC) - 1) 

			SELECT @sqlText = 'RESTORE DATABASE [' + @dbToRestore + '] FROM ' + @sqlTextINC + ' WITH NORECOVERY'

			IF (@printOnly = 1)
			BEGIN
				SELECT (@sqlText)
			END
			ELSE
			BEGIN
				EXEC (@sqlText)
			END

		END


		IF EXISTS (SELECT TOP 1 * FROM #logBackupFiles)
		BEGIN
			SET @sqlText  = ''

			SELECT @sqlText = @sqlText + 'RESTORE LOG [' + @dbToRestore + '] FROM ' + 'URL = N''' + 'https://dbbtgsqlbackups.blob.core.windows.net/sql-backups-availabilitygroup/' + backupPath + ''' WITH NORECOVERY;'
			FROM #logBackupFiles
			order by backupDate

			SELECT @sqlText = LEFT(@sqlText, LEN(@sqlText) - 1) 

			SELECT @sqlText = @sqlText + ' ;RESTORE DATABASE [' + @dbToRestore + '] WITH RECOVERY;'

			IF (@printOnly = 1)
			BEGIN
				SELECT (@sqlText)
			END
			ELSE
			BEGIN
				EXEC (@sqlText)
			END

		END


	END


END