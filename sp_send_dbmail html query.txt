-- Description: Turns a query into a formatted HTML table. Useful for emails. 
-- Any ORDER BY clause needs to be passed in the separate ORDER BY parameter.
-- =============================================
CREATE PROC [dbo].[spQueryToHtmlTable] 
(
  @query nvarchar(MAX), --A query to turn into HTML format. It should not include an ORDER BY clause.
  @orderBy nvarchar(MAX) = NULL, --An optional ORDER BY clause. It should contain the words 'ORDER BY'.
  @html nvarchar(MAX) = NULL OUTPUT --The HTML output of the procedure.
)
AS
BEGIN   
  SET NOCOUNT ON;

  IF @orderBy IS NULL BEGIN
    SET @orderBy = ''  
  END

  SET @orderBy = REPLACE(@orderBy, '''', '''''');

  DECLARE @realQuery nvarchar(MAX) = '
    DECLARE @headerRow nvarchar(MAX);
    DECLARE @cols nvarchar(MAX);    

    SELECT * INTO #dynSql FROM (' + @query + ') sub;

    SELECT @cols = COALESCE(@cols + '', '''''''', '', '''') + ''['' + name + ''] AS ''''td''''''
    FROM tempdb.sys.columns 
    WHERE object_id = object_id(''tempdb..#dynSql'')
    ORDER BY column_id;

    SET @cols = ''SET @html = CAST(( SELECT '' + @cols + '' FROM #dynSql ' + @orderBy + ' FOR XML PATH(''''tr''''), ELEMENTS XSINIL) AS nvarchar(max))''    

    EXEC sys.sp_executesql @cols, N''@html nvarchar(MAX) OUTPUT'', @html=@html OUTPUT

    SELECT @headerRow = COALESCE(@headerRow + '''', '''') + ''<th>'' + name + ''</th>'' 
    FROM tempdb.sys.columns 
    WHERE object_id = object_id(''tempdb..#dynSql'')
    ORDER BY column_id;

    SET @headerRow = ''<tr>'' + @headerRow + ''</tr>'';

    SET @html = ''<table border="1">'' + @headerRow + @html + ''</table>'';    
    ';

  EXEC sys.sp_executesql @realQuery, N'@html nvarchar(MAX) OUTPUT', @html=@html OUTPUT
END
GO


---------------------------------------------


SELECT  
schema_name(schema_id) as sch,o.name as tbl,cast(SUBSTRING(o.name,(SELECT PATINDEX('%[0-9]%',o.name)),8) as varchar(10)) dt,isdate(SUBSTRING(o.name,(SELECT PATINDEX('%[0-9]%',o.name)),8)) isdate,
  ddps.row_count 
into ##baktbls FROM sys.indexes AS i
  INNER JOIN sys.objects AS o ON i.OBJECT_ID = o.OBJECT_ID
  INNER JOIN sys.dm_db_partition_stats AS ddps ON i.OBJECT_ID = ddps.OBJECT_ID
  AND i.index_id = ddps.index_id 
WHERE i.index_id < 2  AND o.is_ms_shipped = 0
and o.name like '%[0-9]%[0-9]%[0-9]%[0-9]%[0-9]%[0-9]%[0-9]%[0-9]%' 


update ##baktbls set dt=SUBSTRING(dt, 1, 2)
    + '/' + SUBSTRING(dt, 3, 2)
    + '/' + SUBSTRING(dt, 5, 4),isdate=1 where isdate(SUBSTRING(dt, 1, 2)
    + '/' + SUBSTRING(dt, 3, 2)
    + '/' + SUBSTRING(dt, 5, 4)) =1 and isdate=0

update ##baktbls set dt= replace(CONVERT(varchar(10), CONVERT(date, dt, 103), 120),'-','') where dt like '%/%'


select sch,tbl,dt,row_count, DATEDIFF(DAY, cast (dt as date), getdate()) age from ##baktbls where DATEDIFF(DAY, cast (dt as date), getdate()) > 30 order by 5 desc, 4 desc

if exists (select 1 from ##baktbls)
begin

DECLARE @html nvarchar(MAX);
EXEC dbatoolbox.dbo.spQueryToHtmlTable @html = @html OUTPUT,  @query = N'SELECT sch,tbl,dt,row_count, DATEDIFF(DAY, cast (dt as date), getdate()) age FROM ##baktbls where DATEDIFF(DAY, cast (dt as date), getdate()) > 30 ', 
@orderBy = N'order by DATEDIFF(DAY, cast (dt as date), getdate()) desc, row_count desc';

EXEC msdb.dbo.sp_send_dbmail
    @profile_name = 'DBASupport',
    @recipients = 'a.campbell@betagy.com;',
    @subject = 'Backup Table Removal - 7 Day Alert',
    @body = @html,
    @body_format = 'HTML',
    @query_no_truncate = 1,
    @attach_query_result_as_file = 0;



end

 drop table ##baktbls